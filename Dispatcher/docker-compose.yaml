version: '3.8'

services:
  # Сервис Redis
  redis:
    image: "redis:6.2"
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    restart: always

  # Сервис MinIO
  minio:
    image: minio/minio:RELEASE.2024-11-07T00-52-20Z
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: qwerdsaf
      MINIO_ROOT_PASSWORD: 88888888556556556
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - app-network
    restart: always

  # Сервис Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    networks:
      - app-network
    restart: always
    entrypoint: /bin/sh
    command:
      - -c
      - |
        cat <<EOF > /etc/prometheus/prometheus.yml
        global:
          scrape_interval: 15s

        scrape_configs:
          - job_name: "spring-boot-app"
            metrics_path: "/actuator/prometheus"
            static_configs:
              - targets: ["host.docker.internal:8080"]
        EOF
        && /bin/prometheus --config.file=/etc/prometheus/prometheus.yml

    # Добавляем дополнительный хост для Linux, если требуется
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Сервис Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - app-network
    restart: always
    depends_on:
      - prometheus
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Viewer"

networks:
  app-network:
    driver: bridge

volumes:
  minio-data:
  grafana-data:
